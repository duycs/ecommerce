// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Order.Infrastructure;

namespace Order.Api.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    partial class OrderDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("order")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Order.Domain.AggregateModels.OrderAggregate.CustomerOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("CarriageNumber")
                        .HasColumnType("text")
                        .HasColumnName("carriage_number");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by_id");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<string>("CustomerAddress")
                        .HasColumnType("text")
                        .HasColumnName("customer_address");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid")
                        .HasColumnName("customer_id");

                    b.Property<string>("CustomerName")
                        .HasColumnType("text")
                        .HasColumnName("customer_name");

                    b.Property<string>("CustomerPhone")
                        .HasColumnType("text")
                        .HasColumnName("customer_phone");

                    b.Property<DateTime>("DateTimeOrder")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date_time_order");

                    b.Property<decimal>("DiscountPrice")
                        .HasColumnType("numeric")
                        .HasColumnName("discount_price");

                    b.Property<Guid?>("DistrictId")
                        .HasColumnType("uuid")
                        .HasColumnName("district_id");

                    b.Property<string>("DistrictName")
                        .HasColumnType("text")
                        .HasColumnName("district_name");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("text")
                        .HasColumnName("last_updated_by");

                    b.Property<Guid>("LastUpdatedById")
                        .HasColumnType("uuid")
                        .HasColumnName("last_updated_by_id");

                    b.Property<DateTimeOffset>("LastUpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_updated_date");

                    b.Property<string>("Note")
                        .HasColumnType("text")
                        .HasColumnName("note");

                    b.Property<long>("OrderNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("order_number");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("text")
                        .HasColumnName("payment_method");

                    b.Property<Guid?>("ProvinceId")
                        .HasColumnType("uuid")
                        .HasColumnName("province_id");

                    b.Property<string>("ProvinceName")
                        .HasColumnType("text")
                        .HasColumnName("province_name");

                    b.Property<string>("SaasCode")
                        .HasColumnType("text")
                        .HasColumnName("saas_code");

                    b.Property<string>("StaffName")
                        .HasColumnType("text")
                        .HasColumnName("staff_name");

                    b.Property<string>("StaffPhone")
                        .HasColumnType("text")
                        .HasColumnName("staff_phone");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<Guid?>("WardId")
                        .HasColumnType("uuid")
                        .HasColumnName("ward_id");

                    b.Property<string>("WardName")
                        .HasColumnType("text")
                        .HasColumnName("ward_name");

                    b.HasKey("Id")
                        .HasName("pk_orders");

                    b.HasIndex("SaasCode")
                        .IsUnique()
                        .HasDatabaseName("ix_orders_saas_code");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("Order.Domain.AggregateModels.OrderAggregate.OrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AttributeValues")
                        .HasColumnType("jsonb")
                        .HasColumnName("attribute_values");

                    b.Property<Guid?>("BrandId")
                        .HasColumnType("uuid")
                        .HasColumnName("brand_id");

                    b.Property<string>("BrandName")
                        .HasColumnType("text")
                        .HasColumnName("brand_name");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by_id");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<decimal>("DiscountPrice")
                        .HasColumnType("numeric")
                        .HasColumnName("discount_price");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("text")
                        .HasColumnName("last_updated_by");

                    b.Property<Guid>("LastUpdatedById")
                        .HasColumnType("uuid")
                        .HasColumnName("last_updated_by_id");

                    b.Property<DateTimeOffset>("LastUpdatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_updated_date");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid")
                        .HasColumnName("order_id");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<Guid>("ProductCategoryId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_category_id");

                    b.Property<string>("ProductCategoryName")
                        .HasColumnType("text")
                        .HasColumnName("product_category_name");

                    b.Property<Guid>("ProductChildId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_child_id");

                    b.Property<string>("ProductChildName")
                        .HasColumnType("text")
                        .HasColumnName("product_child_name");

                    b.Property<string>("ProductChildSku")
                        .HasColumnType("text")
                        .HasColumnName("product_child_sku");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("product_id");

                    b.Property<string>("ProductImage")
                        .HasColumnType("text")
                        .HasColumnName("product_image");

                    b.Property<string>("ProductName")
                        .HasColumnType("text")
                        .HasColumnName("product_name");

                    b.Property<string>("ProductSku")
                        .HasColumnType("text")
                        .HasColumnName("product_sku");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint")
                        .HasColumnName("quantity");

                    b.Property<Guid>("ShopId")
                        .HasColumnType("uuid")
                        .HasColumnName("shop_id");

                    b.Property<string>("ShopName")
                        .HasColumnType("text")
                        .HasColumnName("shop_name");

                    b.HasKey("Id")
                        .HasName("pk_order_details");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("ix_order_details_order_id");

                    b.ToTable("order_details");
                });

            modelBuilder.Entity("Order.Domain.AggregateModels.OrderAggregate.OrderDetail", b =>
                {
                    b.HasOne("Order.Domain.AggregateModels.OrderAggregate.CustomerOrder", "Order")
                        .WithMany("Details")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("fk_order_details_orders_order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Order.Domain.AggregateModels.OrderAggregate.CustomerOrder", b =>
                {
                    b.Navigation("Details");
                });
#pragma warning restore 612, 618
        }
    }
}
